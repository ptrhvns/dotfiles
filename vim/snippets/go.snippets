snippet /f
	// FIXME${1}
snippet /t
	// TODO${1}
snippet /x
	// XXX${1}
snippet var
	var ${1:name} ${2:type}
snippet vai
	${1:name} := ${2:value}
snippet vas
	${1:name} := [${2}]${3:type}{${4:values}}
snippet vam
	${1:name} := make(${2})
snippet if
	if ${1} {
	}
snippet ifs
	if ${1:stmt}; ${2:condition} {
	}
snippet els
	else {
	}
snippet eli
	else if ${1} {
	}
snippet imp
	import ${1}
snippet pac
	package ${1}
snippet swi
	switch ${1}{
	}
snippet for
	for ${1}{
	}
snippet fun
	func ${1:name}(${2}) ${3}{
	}
snippet fn
	func(${1}) ${2}{
	}
snippet met
	func (${1:name} ${2:type}) ${3:name}(${4}) ${5}{
	}
snippet typ
	type ${1:name} ${2:type}
snippet tys
	type ${1:name} struct {
	}
snippet tyi
	type ${1:name} interface {
	}
snippet sel
	select {
	}
snippet cas
	case ${1:expr}:
snippet def
	default:
snippet ran
	${1:names} := range ${2:expr}
snippet gof
	go func (${1}) {
	}(${2})
snippet con
	const ${1:name} = ${2:value}
snippet main
	func main() {
	}
snippet sen
	${1:channel} <- ${2:data}
snippet rec
	${1}<-${2:channel}
snippet tru
	t.Run("${1:description}", func(t *testing.T) {
	})
snippet tes
	func Test${1:Name}(t *testing.T) {
	}
snippet tru
	t.Run("${1:description}", func(t *testing.T) {
	})
snippet ter
	t.Error("${1:message}")
snippet tef
	t.Errorf("${1:message}")
snippet tfa
	t.Fatal("${1:message}")
